// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: route_guide.proto

#ifndef PROTOBUF_INCLUDED_route_5fguide_2eproto
#define PROTOBUF_INCLUDED_route_5fguide_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_route_5fguide_2eproto 

namespace protobuf_route_5fguide_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_route_5fguide_2eproto
namespace gamingstreaming {
class Frame;
class FrameDefaultTypeInternal;
extern FrameDefaultTypeInternal _Frame_default_instance_;
class InputCommand;
class InputCommandDefaultTypeInternal;
extern InputCommandDefaultTypeInternal _InputCommand_default_instance_;
}  // namespace gamingstreaming
namespace google {
namespace protobuf {
template<> ::gamingstreaming::Frame* Arena::CreateMaybeMessage<::gamingstreaming::Frame>(Arena*);
template<> ::gamingstreaming::InputCommand* Arena::CreateMaybeMessage<::gamingstreaming::InputCommand>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gamingstreaming {

// ===================================================================

class Frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gamingstreaming.Frame) */ {
 public:
  Frame();
  virtual ~Frame();

  Frame(const Frame& from);

  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Frame(Frame&& from) noexcept
    : Frame() {
    *this = ::std::move(from);
  }

  inline Frame& operator=(Frame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Frame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Frame* internal_default_instance() {
    return reinterpret_cast<const Frame*>(
               &_Frame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Frame* other);
  friend void swap(Frame& a, Frame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Frame* New() const final {
    return CreateMaybeMessage<Frame>(NULL);
  }

  Frame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Frame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Frame& from);
  void MergeFrom(const Frame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 pixels = 3 [packed = true];
  int pixels_size() const;
  void clear_pixels();
  static const int kPixelsFieldNumber = 3;
  ::google::protobuf::int32 pixels(int index) const;
  void set_pixels(int index, ::google::protobuf::int32 value);
  void add_pixels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pixels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pixels();

  // int32 height = 1;
  void clear_height();
  static const int kHeightFieldNumber = 1;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // int32 width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamingstreaming.Frame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pixels_;
  mutable int _pixels_cached_byte_size_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_route_5fguide_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gamingstreaming.InputCommand) */ {
 public:
  InputCommand();
  virtual ~InputCommand();

  InputCommand(const InputCommand& from);

  inline InputCommand& operator=(const InputCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputCommand(InputCommand&& from) noexcept
    : InputCommand() {
    *this = ::std::move(from);
  }

  inline InputCommand& operator=(InputCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputCommand* internal_default_instance() {
    return reinterpret_cast<const InputCommand*>(
               &_InputCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(InputCommand* other);
  friend void swap(InputCommand& a, InputCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputCommand* New() const final {
    return CreateMaybeMessage<InputCommand>(NULL);
  }

  InputCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputCommand& from);
  void MergeFrom(const InputCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:gamingstreaming.InputCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_route_5fguide_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Frame

// int32 height = 1;
inline void Frame::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 Frame::height() const {
  // @@protoc_insertion_point(field_get:gamingstreaming.Frame.height)
  return height_;
}
inline void Frame::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:gamingstreaming.Frame.height)
}

// int32 width = 2;
inline void Frame::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 Frame::width() const {
  // @@protoc_insertion_point(field_get:gamingstreaming.Frame.width)
  return width_;
}
inline void Frame::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:gamingstreaming.Frame.width)
}

// repeated int32 pixels = 3 [packed = true];
inline int Frame::pixels_size() const {
  return pixels_.size();
}
inline void Frame::clear_pixels() {
  pixels_.Clear();
}
inline ::google::protobuf::int32 Frame::pixels(int index) const {
  // @@protoc_insertion_point(field_get:gamingstreaming.Frame.pixels)
  return pixels_.Get(index);
}
inline void Frame::set_pixels(int index, ::google::protobuf::int32 value) {
  pixels_.Set(index, value);
  // @@protoc_insertion_point(field_set:gamingstreaming.Frame.pixels)
}
inline void Frame::add_pixels(::google::protobuf::int32 value) {
  pixels_.Add(value);
  // @@protoc_insertion_point(field_add:gamingstreaming.Frame.pixels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Frame::pixels() const {
  // @@protoc_insertion_point(field_list:gamingstreaming.Frame.pixels)
  return pixels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Frame::mutable_pixels() {
  // @@protoc_insertion_point(field_mutable_list:gamingstreaming.Frame.pixels)
  return &pixels_;
}

// -------------------------------------------------------------------

// InputCommand

// string command = 1;
inline void InputCommand::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputCommand::command() const {
  // @@protoc_insertion_point(field_get:gamingstreaming.InputCommand.command)
  return command_.GetNoArena();
}
inline void InputCommand::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gamingstreaming.InputCommand.command)
}
#if LANG_CXX11
inline void InputCommand::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gamingstreaming.InputCommand.command)
}
#endif
inline void InputCommand::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gamingstreaming.InputCommand.command)
}
inline void InputCommand::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gamingstreaming.InputCommand.command)
}
inline ::std::string* InputCommand::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:gamingstreaming.InputCommand.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputCommand::release_command() {
  // @@protoc_insertion_point(field_release:gamingstreaming.InputCommand.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputCommand::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:gamingstreaming.InputCommand.command)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gamingstreaming

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_route_5fguide_2eproto
